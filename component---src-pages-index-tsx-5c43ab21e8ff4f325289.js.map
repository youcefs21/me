{"version":3,"file":"component---src-pages-index-tsx-5c43ab21e8ff4f325289.js","mappings":"oMAEMA,EAAW,CACf,8DACA,8DACA,8DACA,gEACA,+DACA,gEACA,8DACA,8DACA,kEACA,+DAGWC,EAAY,WACvB,OACEC,EAAAA,cAAAA,MAAAA,KAEIF,EAASG,KACP,SAAUC,GACR,OAAOF,EAAAA,cAAAA,IAAAA,KAAIE,MAIjBF,EAAAA,cAAAA,IAAAA,CAAGG,UAAW,wBAAd,uDAGAH,EAAAA,cAAAA,IAAAA,CAAGG,UAAW,wBAAd,0CACyCH,EAAAA,cAAAA,OAAAA,CAAMG,UAAU,WAAhB,aAMlCC,EAAc,WACzB,OACIJ,EAAAA,cAAAA,IAAAA,CAAGG,UAAW,wBAAd,6CAC4CH,EAAAA,cAAAA,KAAAA,MAD5C,IACkDA,EAAAA,cAAAA,KAAAA,MADlD,MAEKA,EAAAA,cAAAA,OAAAA,CAAMG,UAAW,WAAjB,YAFL,gBAOOE,EAAkB,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,QAC/B,OACEN,EAAAA,cAAAA,IAAAA,KACEA,EAAAA,cAAAA,OAAAA,CAAMG,UAAU,WAAhB,IAA4BG,EAA5B,KADF,uBCqEJ,EAxGMC,SAAAA,GAIJ,WAAYC,GAAa,IAAD,SACtBC,EAAAA,EAAAA,KAAAA,KAAMD,IAAN,MACKE,MAAQ,CACXC,WAAY,GACZC,WAAY,CACVZ,EAAAA,cAACD,EAAD,OAEFc,OAAQ,8BAEVJ,EAAKK,UAAY,KATK,GAJpBP,EAAAA,EAAAA,GAAAA,EAAAA,GAcH,kBAmFCQ,OAnFD,EAEDC,OAAAA,WAAU,IAAD,OACP,OACEhB,EAAAA,cAAAA,MAAAA,CAAKG,UAAW,MAAQc,eAAgB,SAAAF,GAAG,OAAIG,EAAKC,WAAWJ,KAC7Df,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,qCAIXiB,KAAKV,MAAME,WAAWX,KACpB,SAAUC,GACR,OAAOA,KAIbF,EAAAA,cAAAA,IAAAA,KAAIoB,KAAKV,MAAMG,QACfb,EAAAA,cAAAA,OAAAA,CAAMG,UAAW,wBAAyBiB,KAAKV,MAAMC,YACrDX,EAAAA,cAAAA,IAAAA,CAAGG,UAAU,mBAAb,MAEFH,EAAAA,cAAAA,OAAAA,CAAMqB,SAAU,SAAAN,GAAG,OAAIG,EAAKI,kBAAkBP,KAC5Cf,EAAAA,cAAAA,QAAAA,CACEE,MAAO,GACPC,UAAU,iBACVoB,IAAK,SAACC,GAAYN,EAAKJ,UAAYU,GACnCC,UAAW,SAAAV,GAAG,OAAIG,EAAKQ,oBAAoBX,IAC3CY,SAAU,SAAAZ,GAAG,OAAIG,EAAKU,iBAAiBb,SAtB/C,EA6BFI,WAAAA,SAAWJ,GACa,MAAlBK,KAAKN,WACPM,KAAKN,UAAUe,SAChB,EAGHH,oBAAAA,SAAoBX,GAClB,IAAMe,EAAMf,EAAIe,IACZC,EAAMX,KAAKV,MAAMC,WACT,cAARmB,IACFC,EAAMA,EAAIC,MAAM,GAAI,IAEV,MAARF,GAAef,EAAIkB,UACrBb,KAAKc,SAAS,CACZtB,WAAY,KAEdG,EAAIoB,kBAENf,KAAKc,SAAS,CAACvB,WAAYoB,KAA3B,EAGFH,iBAAAA,SAAiBb,GACf,IAAMgB,EAAMhB,EAAIqB,OAAOlC,MACvBkB,KAAKc,SAAS,CAACvB,WAAYS,KAAKV,MAAMC,WAAaoB,KAAnD,EAGFT,kBAAAA,SAAkBP,GAChBK,KAAKV,MAAME,WAAWyB,KAElBrC,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,IAAAA,KAAAA,8BACAA,EAAAA,cAAAA,OAAAA,CAAMG,UAAW,wBAAyBiB,KAAKV,MAAMC,cAI3D,IAAM2B,EAAOlB,KAAKV,MAAMC,WAAW4B,MAAM,KACrCC,EAAkBxC,EAAAA,cAACK,EAAD,CAAiBC,QAASgC,EAAK,KACrD,OAAQA,EAAK,IACX,IAAK,OACHE,EAAkBxC,EAAAA,cAACI,EAAD,MAClB,MACF,IAAK,SACHoC,EAAkBxC,EAAAA,cAACD,EAAD,MAGtBqB,KAAKV,MAAME,WAAWyB,KAAKG,GAE3BpB,KAAKc,SAAS,CACZvB,WAAY,GACZC,WAAYQ,KAAKV,MAAME,aAEzBG,EAAIoB,kBAAJpB,EAjGER,CAAiBP,EAAAA,WCSvB,EAdkB,WAChB,OACIA,EAAAA,cAACyC,EAAAA,EAAD,CAAQC,UAAW,SAAUC,SAAU,yFACrC3C,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAC4C,EAAAA,EAAD,KACE5C,EAAAA,cAAAA,QAAAA,KAAAA,UACAA,EAAAA,cAAAA,OAAAA,CAAM6C,KAAK,cAAcC,QAAQ,mBAAmBC,MAAO,aAE7D/C,EAAAA,cAACO,EAAD","sources":["webpack://portfolio/./src/components/commands.tsx","webpack://portfolio/./src/components/terminal.tsx","webpack://portfolio/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\";\n\nconst commands = [\n  \"                                                           \",\n  \" /00     /11                                       /000100 \",\n  \"|  10   /10/                                      /00__  10\",\n  \" \\\\  01 /00//111000  /10   /11  /1000100  /010100 | 10  \\\\__/\",\n  \"  \\\\  0100//11__  00| 01  | 10 /10_____/ /00__  00| 0000    \",\n  \"   \\\\  11/| 01  \\\\ 10| 00  | 00| 00      | 00011000| 11_/    \",\n  \"    | 00 | 00  | 01| 10  | 00| 00      | 11_____/| 00      \",\n  \"    | 01 |  010010/|  100001/|  0011010|  0110001| 10      \",\n  \"    |__/  \\\\______/  \\\\______/  \\\\_______/ \\\\_______/|__/      \",\n  \"                                                           \"\n]\n\nexport const BannerJSX = () => {\n  return (\n    <div>\n      {\n        commands.map(\n          function (value) {\n            return <p>{value}</p>;\n          }\n        )\n      }\n      <p className={\"orange-terminal-text\"}>\n        Welcome to my interactive terminal based portfolio.\n      </p>\n      <p className={\"orange-terminal-text\"}>\n        For a list of available commands, type <span className=\"command\">'help'</span>\n      </p>\n    </div>\n  )\n}\n\nexport const HelpCommand = () => {\n  return (\n      <p className={\"orange-terminal-text\"}>\n        it's looking very deserted around here... <br/> <br/>\n        ig <span className={\"command\"}>'banner'</span> is a thing\n      </p>\n  )\n}\n\nexport const CommandNotFound = ({command}: {command: string}) => {\n  return (\n    <p>\n      <span className=\"command\">'{command}'</span> command not found\n    </p>\n  )\n}","import * as React from \"react\";\nimport '../styles/terminal.css'\nimport {BannerJSX, CommandNotFound, HelpCommand} from \"./commands\";\n\n\ntype terminalState = { \n  inputValue: string,\n  consoleLog: JSX.Element[],\n  prefix: string\n}\n\nclass Terminal extends React.Component<{},terminalState> {\n\n  nameInput: HTMLInputElement  | null;\n\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      inputValue: '',\n      consoleLog: [\n        <BannerJSX/>\n      ],\n      prefix: \"me@youcefs21.github.io:~$ \"\n    };\n    this.nameInput = null;\n  }\n\n  render() {\n    return (\n      <div className={\"box\"}  onClickCapture={evt => this.focusInput(evt)}>\n        <div className=\"green-terminal-text terminal-text\">\n          {\n            // I have no idea why I need map for this to work by\n            // ¯\\_(ツ)_/¯\n            this.state.consoleLog.map(\n              function (value) {\n                return value;\n              }\n            )\n          }\n          <b>{this.state.prefix}</b>\n          <span className={\"orange-terminal-text\"}>{this.state.inputValue}</span>\n          <b className=\"terminal-cursor\">█</b>\n        </div>\n        <form onSubmit={evt => this.processSubmission(evt)}>\n          <input\n            value={\"\"}\n            className=\"terminal-input\"\n            ref={(input) => { this.nameInput = input; }}\n            onKeyDown={evt => this.processSpecialInput(evt)}\n            onChange={evt => this.processCharInput(evt)}\n          />\n        </form>\n      </div>\n    )\n  }\n\n  focusInput(evt: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (this.nameInput != null){\n      this.nameInput.focus();\n    }\n  }\n\n  processSpecialInput(evt: React.KeyboardEvent<HTMLDivElement>) {\n    const key = evt.key;\n    let val = this.state.inputValue\n    if (key === \"Backspace\"){\n      val = val.slice(0, -1);\n    }\n    if (key === \"l\" && evt.ctrlKey){\n      this.setState({\n        consoleLog: []\n      })\n      evt.preventDefault();\n    }\n    this.setState({inputValue: val})\n  }\n\n  processCharInput(evt: React.ChangeEvent<HTMLInputElement>) {\n    const val = evt.target.value;\n    this.setState({inputValue: this.state.inputValue + val})\n  }\n\n  processSubmission(evt: React.FormEvent<HTMLFormElement>) {\n    this.state.consoleLog.push(\n      (\n        <div>\n          <b>me@youcefs21.github.io:~$ </b>\n          <span className={\"orange-terminal-text\"}>{this.state.inputValue}</span>\n        </div>\n      )\n    )\n    const args = this.state.inputValue.split(\" \")\n    let commandResponse = <CommandNotFound command={args[0]}/>\n    switch (args[0]) {\n      case \"help\":\n        commandResponse = <HelpCommand/>\n        break\n      case \"banner\":\n        commandResponse = <BannerJSX/>\n    }\n\n    this.state.consoleLog.push(commandResponse)\n\n    this.setState({\n      inputValue: \"\",\n      consoleLog: this.state.consoleLog\n    });\n    evt.preventDefault();\n  }\n\n\n}\n\n\nexport default Terminal","import * as React from 'react'\nimport Layout from \"../components/layout\";\nimport {Helmet} from \"react-helmet\";\nimport Terminal from '../components/terminal';\n\n\nconst IndexPage = () => {\n  return (\n      <Layout pageTitle={\"Youcef\"} pageDesc={\"I am a software engineer who loves learning new things and exploring new technologies\"}>\n        <div>\n          <Helmet>\n            <title>Youcef</title>\n            <meta name=\"description\" content=\"A Portfolio Page\" color={\"#21212F\"}/>\n          </Helmet>\n          <Terminal/>\n        </div>\n      </Layout>\n  )\n}\n\nexport default IndexPage"],"names":["commands","BannerJSX","React","map","value","className","HelpCommand","CommandNotFound","command","Terminal","props","_this","state","inputValue","consoleLog","prefix","nameInput","evt","render","onClickCapture","_this2","focusInput","this","onSubmit","processSubmission","ref","input","onKeyDown","processSpecialInput","onChange","processCharInput","focus","key","val","slice","ctrlKey","setState","preventDefault","target","push","args","split","commandResponse","Layout","pageTitle","pageDesc","Helmet","name","content","color"],"sourceRoot":""}