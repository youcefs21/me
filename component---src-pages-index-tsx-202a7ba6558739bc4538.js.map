{"version":3,"file":"component---src-pages-index-tsx-202a7ba6558739bc4538.js","mappings":"oMAEMA,EAAS,CACb,8DACA,8DACA,gEACA,+DACA,gEACA,8DACA,8DACA,kEACA,8DACA,8DACA,+DAGWC,EAAY,WACvB,OACEC,EAAAA,cAAAA,MAAAA,KAEIF,EAAOG,KACL,SAAUC,GACR,OAAOF,EAAAA,cAAAA,IAAAA,CAAGG,MAAO,CAACC,WAAY,QAASF,QCoFnD,EA/FMG,SAAAA,GAIJ,WAAYC,GAAa,IAAD,SACtBC,EAAAA,EAAAA,KAAAA,KAAMD,IAAN,MACKE,MAAQ,CACXC,WAAY,GACZC,WAAY,CACVV,EAAAA,cAACD,EAAD,OAEFY,OAAQ,8BAEVJ,EAAKK,UAAY,KATK,GAJpBP,EAAAA,EAAAA,GAAAA,EAAAA,GAcH,kBA0ECQ,OA1ED,EAEDC,OAAAA,WAAU,IAAD,OACP,OACEd,EAAAA,cAAAA,MAAAA,CAAKe,UAAW,MAAQC,eAAgB,SAAAH,GAAG,OAAII,EAAKC,WAAWL,KAC7Db,EAAAA,cAAAA,MAAAA,CAAKe,UAAU,iBAIXI,KAAKX,MAAME,WAAWT,KACpB,SAAUC,GACR,OAAOA,KAIbF,EAAAA,cAAAA,IAAAA,CAAGe,UAAU,mBAAmBI,KAAKX,MAAMG,QAAYQ,KAAKX,MAAMC,WAAWT,EAAAA,cAAAA,IAAAA,CAAGe,UAAU,mBAAb,MAE/Ef,EAAAA,cAAAA,OAAAA,CAAMoB,SAAU,SAAAP,GAAG,OAAII,EAAKI,kBAAkBR,KAC5Cb,EAAAA,cAAAA,QAAAA,CACEE,MAAO,GACPa,UAAU,iBACVO,IAAK,SAACC,GAAYN,EAAKL,UAAYW,GACnCC,UAAW,SAAAX,GAAG,OAAII,EAAKQ,oBAAoBZ,IAC3Ca,SAAU,SAAAb,GAAG,OAAII,EAAKU,iBAAiBd,SApB/C,EA2BFK,WAAAA,SAAWL,GACa,MAAlBM,KAAKP,WACPO,KAAKP,UAAUgB,SAChB,EAGHH,oBAAAA,SAAoBZ,GAClB,IAAMgB,EAAMhB,EAAIgB,IACZC,EAAMX,KAAKX,MAAMC,WACT,cAARoB,IACFC,EAAMA,EAAIC,MAAM,GAAI,IAEV,MAARF,GAAehB,EAAImB,UACrBb,KAAKc,SAAS,CACZvB,WAAY,KAEdG,EAAIqB,kBAENf,KAAKc,SAAS,CAACxB,WAAYqB,KAA3B,EAGFH,iBAAAA,SAAiBd,GACf,IAAMiB,EAAMjB,EAAIsB,OAAOjC,MACvBiB,KAAKc,SAAS,CAACxB,WAAYU,KAAKX,MAAMC,WAAaqB,KAAnD,EAGFT,kBAAAA,SAAkBR,GAChBM,KAAKX,MAAME,WAAW0B,KAElBpC,EAAAA,cAAAA,IAAAA,KACEA,EAAAA,cAAAA,IAAAA,CAAGe,UAAU,mBAAb,8BADF,IACiEI,KAAKX,MAAMC,YAI5ET,EAAAA,cAAAA,IAAAA,KACEA,EAAAA,cAAAA,OAAAA,CAAMe,UAAU,WAAhB,IAA4BI,KAAKX,MAAMC,WAAW4B,MAAM,KAAK,GAA7D,KADF,uBAMJlB,KAAKc,SAAS,CACZxB,WAAY,GACZC,WAAYS,KAAKX,MAAME,aAEzBG,EAAIqB,kBAAJrB,EAxFER,CAAiBL,EAAAA,WCSvB,EAdkB,WAChB,OACIA,EAAAA,cAACsC,EAAAA,EAAD,CAAQC,UAAW,SAAUC,SAAU,yFACrCxC,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAACyC,EAAAA,EAAD,KACEzC,EAAAA,cAAAA,QAAAA,KAAAA,UACAA,EAAAA,cAAAA,OAAAA,CAAM0C,KAAK,cAAcC,QAAQ,mBAAmBC,MAAO,aAE7D5C,EAAAA,cAACK,EAAD","sources":["webpack://portfolio/./src/components/commands/banner.tsx","webpack://portfolio/./src/components/terminal.tsx","webpack://portfolio/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\";\n\nconst banner = [\n  \" /$$     /$$                                       /$$$$$$ \",\n  \"|  $$   /$$/                                      /$$__  $$\",\n  \" \\\\  $$ /$$//$$$$$$  /$$   /$$  /$$$$$$$  /$$$$$$ | $$  \\\\__/\",\n  \"  \\\\  $$$$//$$__  $$| $$  | $$ /$$_____/ /$$__  $$| $$$$    \",\n  \"   \\\\  $$/| $$  \\\\ $$| $$  | $$| $$      | $$$$$$$$| $$_/    \",\n  \"    | $$ | $$  | $$| $$  | $$| $$      | $$_____/| $$      \",\n  \"    | $$ |  $$$$$$/|  $$$$$$/|  $$$$$$$|  $$$$$$$| $$      \",\n  \"    |__/  \\\\______/  \\\\______/  \\\\_______/ \\\\_______/|__/      \",\n  \"                                                           \",\n  \"                                                           \",\n  \"                                                           \"\n]\n\nexport const BannerJSX = () => {\n  return (\n    <div>\n      {\n        banner.map(\n          function (value) {\n            return <p style={{whiteSpace: \"pre\"}}>{value}</p>;\n          }\n        )\n      }\n    </div>\n  )\n}","import * as React from \"react\";\nimport '../styles/terminal.css'\nimport {BannerJSX} from \"./commands/banner\";\n\n\ntype terminalState = { \n  inputValue: string,\n  consoleLog: JSX.Element[],\n  prefix: string\n}\n\nclass Terminal extends React.Component<{},terminalState> {\n\n  nameInput: HTMLInputElement  | null;\n\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      inputValue: '',\n      consoleLog: [\n        <BannerJSX/>\n      ],\n      prefix: \"me@youcefs21.github.io:~$ \"\n    };\n    this.nameInput = null;\n  }\n\n  render() {\n    return (\n      <div className={\"box\"}  onClickCapture={evt => this.focusInput(evt)}>\n        <div className=\"terminal-text\">\n          {\n            // I have no idea why I need map for this to work by\n            // ¯\\_(ツ)_/¯\n            this.state.consoleLog.map(\n              function (value) {\n                return value;\n              }\n            )\n          }\n          <b className=\"terminal-prefix\">{this.state.prefix}</b>{this.state.inputValue}<b className=\"terminal-cursor\">█</b>\n        </div>\n        <form onSubmit={evt => this.processSubmission(evt)}>\n          <input\n            value={\"\"}\n            className=\"terminal-input\"\n            ref={(input) => { this.nameInput = input; }}\n            onKeyDown={evt => this.processSpecialInput(evt)}\n            onChange={evt => this.processCharInput(evt)}\n          />\n        </form>\n      </div>\n    )\n  }\n\n  focusInput(evt: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (this.nameInput != null){\n      this.nameInput.focus();\n    }\n  }\n\n  processSpecialInput(evt: React.KeyboardEvent<HTMLDivElement>) {\n    const key = evt.key;\n    let val = this.state.inputValue\n    if (key === \"Backspace\"){\n      val = val.slice(0, -1);\n    }\n    if (key === \"l\" && evt.ctrlKey){\n      this.setState({\n        consoleLog: []\n      })\n      evt.preventDefault();\n    }\n    this.setState({inputValue: val})\n  }\n\n  processCharInput(evt: React.ChangeEvent<HTMLInputElement>) {\n    const val = evt.target.value;\n    this.setState({inputValue: this.state.inputValue + val})\n  }\n\n  processSubmission(evt: React.FormEvent<HTMLFormElement>) {\n    this.state.consoleLog.push(\n      (\n        <p>\n          <b className=\"terminal-prefix\">me@youcefs21.github.io:~$ </b> {this.state.inputValue}\n        </p>\n      ),\n      (\n        <p>\n          <span className=\"command\">'{this.state.inputValue.split(\" \")[0]}'</span> command not found\n        </p>\n      )\n    )\n    \n    this.setState({\n      inputValue: \"\",\n      consoleLog: this.state.consoleLog\n    });\n    evt.preventDefault();\n  }\n\n\n}\n\n\nexport default Terminal","import * as React from 'react'\nimport Layout from \"../components/layout\";\nimport {Helmet} from \"react-helmet\";\nimport Terminal from '../components/terminal';\n\n\nconst IndexPage = () => {\n  return (\n      <Layout pageTitle={\"Youcef\"} pageDesc={\"I am a software engineer who loves learning new things and exploring new technologies\"}>\n        <div>\n          <Helmet>\n            <title>Youcef</title>\n            <meta name=\"description\" content=\"A Portfolio Page\" color={\"#21212F\"}/>\n          </Helmet>\n          <Terminal/>\n        </div>\n      </Layout>\n  )\n}\n\nexport default IndexPage"],"names":["banner","BannerJSX","React","map","value","style","whiteSpace","Terminal","props","_this","state","inputValue","consoleLog","prefix","nameInput","evt","render","className","onClickCapture","_this2","focusInput","this","onSubmit","processSubmission","ref","input","onKeyDown","processSpecialInput","onChange","processCharInput","focus","key","val","slice","ctrlKey","setState","preventDefault","target","push","split","Layout","pageTitle","pageDesc","Helmet","name","content","color"],"sourceRoot":""}