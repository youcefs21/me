{"version":3,"file":"component---src-pages-index-tsx-b4ab73ad0e2ee2397862.js","mappings":"oMA6FA,EAnFMA,SAAAA,GAIJ,WAAYC,GAAa,IAAD,SACtBC,EAAAA,EAAAA,KAAAA,KAAMD,IAAN,MACKE,MAAQ,CACXC,WAAY,GACZC,WAAY,GACZC,OAAQ,8BAEVJ,EAAKK,UAAY,KAPK,GAJpBP,EAAAA,EAAAA,GAAAA,EAAAA,GAYH,kBAgECQ,OAhED,EAEDC,OAAAA,WAAU,IAAD,OACP,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAW,MAAQC,eAAgB,SAAAJ,GAAG,OAAIK,EAAKC,WAAWN,KAC7DE,EAAAA,cAAAA,OAAAA,CAAMK,SAAU,SAAAP,GAAG,OAAIK,EAAKG,kBAAkBR,KAC5CE,EAAAA,cAAAA,QAAAA,CACEO,MAAO,GACPN,UAAU,iBACVO,IAAK,SAACC,GAAYN,EAAKN,UAAYY,GACnCC,UAAW,SAAAZ,GAAG,OAAIK,EAAKQ,oBAAoBb,IAC3Cc,SAAU,SAAAd,GAAG,OAAIK,EAAKU,iBAAiBf,OAG3CE,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,iBAEXa,KAAKrB,MAAME,WAAWoB,KACpB,SAAUR,GACR,OAAOP,EAAAA,cAAAA,IAAAA,CAAGgB,MAAO,CAACC,OAAO,aAAcV,MAI7CP,EAAAA,cAAAA,IAAAA,KAAIc,KAAKrB,MAAMG,QAAYkB,KAAKrB,MAAMC,WAAWM,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,mBAAb,QAnBvD,EAyBFG,WAAAA,SAAWN,GACa,MAAlBgB,KAAKjB,WACPiB,KAAKjB,UAAUqB,SAChB,EAGHP,oBAAAA,SAAoBb,GAClB,IAAMqB,EAAMrB,EAAIqB,IACZC,EAAMN,KAAKrB,MAAMC,WACT,cAARyB,IACFC,EAAMA,EAAIC,MAAM,GAAI,IAEV,MAARF,GAAerB,EAAIwB,UACrBR,KAAKS,SAAS,CACZ5B,WAAY,KAEdG,EAAI0B,kBAENV,KAAKS,SAAS,CAAC7B,WAAY0B,KAA3B,EAGFP,iBAAAA,SAAiBf,GACf,IAAMsB,EAAMtB,EAAI2B,OAAOlB,MACvBO,KAAKS,SAAS,CAAC7B,WAAYoB,KAAKrB,MAAMC,WAAa0B,KAAnD,EAGFd,kBAAAA,SAAkBR,GAChBgB,KAAKrB,MAAME,WAAW+B,KACpB,6BAA+BZ,KAAKrB,MAAMC,WAC1C,iCAAmCoB,KAAKrB,MAAMC,WAAa,mBAG7DoB,KAAKS,SAAS,CACZ7B,WAAY,GACZC,WAAYmB,KAAKrB,MAAME,aAEzBG,EAAI0B,kBAAJ1B,EA5EER,CAAiBU,EAAAA,WCUvB,EAdkB,WAChB,OACIA,EAAAA,cAAC2B,EAAAA,EAAD,CAAQC,UAAW,SAAUC,SAAU,yFACrC7B,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAC8B,EAAAA,EAAD,KACE9B,EAAAA,cAAAA,QAAAA,KAAAA,UACAA,EAAAA,cAAAA,OAAAA,CAAM+B,KAAK,cAAcC,QAAQ,sBAEnChC,EAAAA,cAACV,EAAD","sources":["webpack://portfolio/./src/components/terminal.tsx","webpack://portfolio/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport '../styles/terminal.css'\n\n\ntype terminalState = { \n  inputValue: string,\n  consoleLog: string[],\n  prefix: string\n}\n\nclass Terminal extends React.Component<{},terminalState> {\n\n  nameInput: HTMLInputElement  | null;\n\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      inputValue: '',\n      consoleLog: [],\n      prefix: \"me@youcefs21.github.io:~$ \"\n    };\n    this.nameInput = null;\n  }\n\n  render() {\n    return (\n      <div className={\"box\"}  onClickCapture={evt => this.focusInput(evt)}>\n        <form onSubmit={evt => this.processSubmission(evt)}>\n          <input \n            value={\"\"} \n            className=\"terminal-input\"\n            ref={(input) => { this.nameInput = input; }} \n            onKeyDown={evt => this.processSpecialInput(evt)}\n            onChange={evt => this.processCharInput(evt)}\n          />\n        </form>\n        <div className=\"terminal-text\">\n          {\n            this.state.consoleLog.map(\n              function (value) {\n                return <p style={{margin:\"0 0 10px\"}}>{value}</p>;\n              }\n            )\n          }\n          <b>{this.state.prefix}</b>{this.state.inputValue}<b className=\"terminal-cursor\">â–ˆ</b>\n        </div>\n      </div>\n    )\n  }\n\n  focusInput(evt: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (this.nameInput != null){\n      this.nameInput.focus();\n    }\n  }\n\n  processSpecialInput(evt: React.KeyboardEvent<HTMLDivElement>) {\n    const key = evt.key;\n    var val = this.state.inputValue\n    if (key === \"Backspace\"){\n      val = val.slice(0, -1);\n    }\n    if (key === \"l\" && evt.ctrlKey){\n      this.setState({\n        consoleLog: []\n      })\n      evt.preventDefault();\n    }\n    this.setState({inputValue: val})\n  }\n\n  processCharInput(evt: React.ChangeEvent<HTMLInputElement>) {\n    const val = evt.target.value;\n    this.setState({inputValue: this.state.inputValue + val})\n  }\n\n  processSubmission(evt: React.FormEvent<HTMLFormElement>) {\n    this.state.consoleLog.push(\n      \"me@youcefs21.github.io:~$ \" + this.state.inputValue,\n      \"<insert cool response to the `\" + this.state.inputValue + \"` command here>\"\n    )\n    \n    this.setState({\n      inputValue: \"\",\n      consoleLog: this.state.consoleLog\n    });\n    evt.preventDefault();\n  }\n\n\n}\n\n\nexport default Terminal","import * as React from 'react'\nimport Layout from \"../components/layout\";\nimport {Helmet} from \"react-helmet\";\nimport Terminal from '../components/terminal';\n\n\nconst IndexPage = () => {\n  return (\n      <Layout pageTitle={\"Youcef\"} pageDesc={\"I am a software engineer who loves learning new things and exploring new technologies\"}>\n        <div>\n          <Helmet>\n            <title>Youcef</title>\n            <meta name=\"description\" content=\"A Portfolio Page\" />\n          </Helmet>\n          <Terminal/>\n        </div>\n      </Layout>\n  )\n}\n\nexport default IndexPage"],"names":["Terminal","props","_this","state","inputValue","consoleLog","prefix","nameInput","evt","render","React","className","onClickCapture","_this2","focusInput","onSubmit","processSubmission","value","ref","input","onKeyDown","processSpecialInput","onChange","processCharInput","this","map","style","margin","focus","key","val","slice","ctrlKey","setState","preventDefault","target","push","Layout","pageTitle","pageDesc","Helmet","name","content"],"sourceRoot":""}