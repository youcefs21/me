{"version":3,"file":"component---src-pages-index-tsx-b4a637919fae15368cbf.js","mappings":"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","sources":["webpack://portfolio/./src/components/commands.tsx","webpack://portfolio/./src/components/terminal.tsx","webpack://portfolio/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\";\n\nexport const CommandResponse = ({args}:{args: string[]}) => {\n  switch (args[0]) {\n    case \"help\":\n      return <HelpCommand/>\n    case \"banner\":\n      return <BannerJSX/>\n  }\n  return <CommandNotFound command={args[0]}/>\n}\n\n\nexport const BannerJSX = () => {\n  return (\n    <div>\n      <p>\n        {\"                                                           \"} <br/>\n        {\" /00     /11                                       /000100 \"} <br/>\n        {\"|  10   /10/                                      /00__  10\"} <br/>\n        {\" \\\\  01 /00//111000  /10   /11  /1000100  /010100 | 10  \\\\__/\"} <br/>\n        {\"  \\\\  0100//11__  00| 01  | 10 /10_____/ /00__  00| 0000    \"} <br/>\n        {\"   \\\\  11/| 01  \\\\ 10| 00  | 00| 00      | 00011000| 11_/    \"} <br/>\n        {\"    | 00 | 00  | 01| 10  | 00| 00      | 11_____/| 00      \"} <br/>\n        {\"    | 01 |  010010/|  100001/|  0011010|  0110001| 10      \"} <br/>\n        {\"    |__/  \\\\______/  \\\\______/  \\\\_______/ \\\\_______/|__/      \"} <br/>\n        {\"                                                           \"}\n      </p>\n      <p className={\"orange-terminal-text\"}>\n        Welcome to my interactive terminal based portfolio.\n      </p>\n      <p className={\"orange-terminal-text\"}>\n        For a list of available commands, type <span className=\"command\">'help'</span>\n      </p>\n    </div>\n  )\n}\n\nconst HelpCommand = () => {\n  return (\n      <p className={\"orange-terminal-text\"}>\n        it's looking very deserted around here... <br/> <br/>\n        ig <span className={\"command\"}>'banner'</span> is a thing\n      </p>\n  )\n}\n\nconst CommandNotFound = ({command}: {command: string}) => {\n  return (\n    <p>\n      <span className=\"command\">'{command}'</span> command not found\n    </p>\n  )\n}","import * as React from \"react\";\nimport '../styles/terminal.css'\nimport {CommandResponse, BannerJSX} from \"./commands\";\n\n\ntype terminalState = { \n  inputValue: string,\n  consoleLog: JSX.Element[],\n  prefix: string,\n  commandHistory: (string | null)[]\n}\n\nclass Terminal extends React.Component<{},terminalState> {\n\n  nameInput: HTMLInputElement  | null;\n\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      inputValue: '',\n      consoleLog: [\n        <BannerJSX key={\"InitialBanner\"}/>\n      ],\n      prefix: \"me@youcefs21.github.io:~$ \",\n      commandHistory: [\n        null\n      ]\n    };\n    this.nameInput = null;\n  }\n\n  render() {\n    return (\n      <div className={\"terminal-box\"}  onClickCapture={evt => this.focusInput(evt)}>\n          {\n            this.state.consoleLog.map(\n              function (value) {\n                return value;\n              }\n            )\n          }\n          <b>{this.state.prefix}</b>\n          <span className={\"orange-terminal-text\"}>{this.state.inputValue}</span>\n          <b className=\"terminal-cursor\">â–ˆ</b>\n        <form onSubmit={evt => this.processSubmission(evt)}>\n          <input\n            value={\"\"}\n            className=\"terminal-input\"\n            ref={(input) => { this.nameInput = input; }}\n            onKeyDown={evt => this.processSpecialInput(evt)}\n            onChange={evt => this.processCharInput(evt)}\n          />\n        </form>\n      </div>\n    )\n  }\n\n  focusInput(evt: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (this.nameInput != null){\n      this.nameInput.focus();\n    }\n  }\n\n  processSpecialInput(evt: React.KeyboardEvent<HTMLDivElement>) {\n    const key = evt.key;\n    let val = this.state.inputValue;\n    if (key === \"Backspace\"){\n      val = val.slice(0, -1);\n    }\n    else if (key === \"l\" && evt.ctrlKey){\n      this.setState({\n        consoleLog: []\n      })\n      evt.preventDefault();\n    }\n    else if (key === \"ArrowUp\" && this.state.commandHistory.at(-1) != null) {\n      this.state.commandHistory.unshift(val);\n      val = this.state.commandHistory.pop()!;\n    }\n    else if (key === \"ArrowDown\" && this.state.commandHistory[0] != null && val!='') {\n      this.state.commandHistory.push(val);\n      val = this.state.commandHistory.shift()!;\n    }\n    this.setState({\n      inputValue: val,\n      commandHistory: this.state.commandHistory\n    });\n  }\n\n  processCharInput(evt: React.ChangeEvent<HTMLInputElement>) {\n    const val = evt.target.value;\n    this.setState({inputValue: this.state.inputValue + val})\n  }\n\n  processSubmission(evt: React.FormEvent<HTMLFormElement>) {\n    this.state.consoleLog.push(\n      (\n        <div key={\"prompt\" + this.state.consoleLog.length.toString()}>\n          <b>{this.state.prefix}</b>\n          <span className={\"orange-terminal-text\"}>{this.state.inputValue}</span>\n        </div>\n      )\n    )\n    const args = this.state.inputValue.split(\" \")\n    const key = \"response\" + this.state.consoleLog.length.toString()\n    if (this.state.inputValue != \"\"){\n      this.state.consoleLog.push(<CommandResponse args={args} key={key}/>)\n      this.state.commandHistory.push(this.state.inputValue)\n    }\n\n    this.setState({\n      inputValue: \"\",\n      consoleLog: this.state.consoleLog,\n      commandHistory: this.state.commandHistory\n    });\n    evt.preventDefault();\n  }\n\n\n}\n\n\nexport default Terminal","import * as React from 'react'\nimport Layout from \"../components/layout\";\nimport {Helmet} from \"react-helmet\";\nimport Terminal from '../components/terminal';\n\n\nconst IndexPage = () => {\n  return (\n      <Layout pageTitle={\"Youcef\"} pageDesc={\"I am a software engineer who loves learning new things and exploring new technologies\"} theme={\"light\"}>\n        <div>\n          <Helmet>\n            <title>Youcef</title>\n            <meta name=\"description\" content=\"A Portfolio Page\" color={\"#21212F\"}/>\n          </Helmet>\n          <Terminal/>\n        </div>\n      </Layout>\n  )\n}\n\nexport default IndexPage"],"names":["CommandResponse","args","React","HelpCommand","BannerJSX","CommandNotFound","command","className","Terminal","props","_this","state","inputValue","consoleLog","key","prefix","commandHistory","nameInput","evt","render","onClickCapture","_this2","focusInput","this","map","value","onSubmit","processSubmission","ref","input","onKeyDown","processSpecialInput","onChange","processCharInput","focus","val","slice","ctrlKey","setState","preventDefault","at","unshift","pop","push","shift","target","length","toString","split","Layout","pageTitle","pageDesc","theme","Helmet","name","content","color"],"sourceRoot":""}